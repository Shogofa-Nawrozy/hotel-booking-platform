version: '3.3'

services:
  mariadb:
    image: mariadb
    container_name: mariadb
    restart: always
    environment:
      MYSQL_ROOT_PASSWORD: root
      MYSQL_DATABASE: hotelbooking
      MYSQL_USER: user
      MYSQL_PASSWORD: upass
    ports:
      - "3306:3306"
    volumes:
      - mariadb-data:/var/lib/mysql
      - ./init_sql/create.sql:/docker-entrypoint-initdb.d/create.sql
    networks:
      - hotel_network

  # Adminer for MariaDB
  adminer:
    image: adminer
    container_name: adminer
    restart: always
    ports:
      - "8080:8080"
    depends_on:
      - mariadb
    networks:
      - hotel_network

  # MongoDB Service
  mongo:
    image: mongo
    container_name: mongo
    restart: always
    ports:
      - "27017:27017"
    volumes:
      - mongo-data:/data/db
    networks:
      - hotel_network

  # Mongo Express for MongoDB
  mongo-express:
    image: mongo-express
    container_name: mongo-express
    restart: always
    ports:
      - "8081:8081"
    environment:
      - ME_CONFIG_MONGODB_SERVER=mongo
      - ME_CONFIG_MONGODB_ENABLE_ADMIN=true
      - ME_CONFIG_BASICAUTH_USERNAME=admin
      - ME_CONFIG_BASICAUTH_PASSWORD=admin
      - ME_CONFIG_MONGODB_AUTH_DATABASE=admin
      - ME_CONFIG_MONGODB_ADMINUSERNAME=
      - ME_CONFIG_MONGODB_ADMINPASSWORD=
    depends_on:
      - mongo
    networks:
      - hotel_network

  # Flask Backend App
  backend:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: flask-app
    restart: always
    ports:
      - "5000:5000"
    volumes:
      - .:/app
    depends_on:
      - mongo
      - mariadb
    networks:
      - hotel_network

volumes:
  mongo-data:
  mariadb-data:


networks:
  hotel_network:
    driver: bridge
